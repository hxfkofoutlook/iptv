name: Sync Gitee Migu Files

on:
  schedule:
  # - cron: "0 */1 * * *"  # 每 1 小时同步一次
  workflow_dispatch:       # 支持手动触发

jobs:
  sync-files:
    runs-on: ubuntu-latest
    steps:
      # 检出 GitHub 仓库
      - name: Checkout GitHub repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0

      # 配置 Git 用户信息
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 从 Gitee 下载并解析文件
      - name: Download and process files from Gitee
        env:
          GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
        run: |
          # 安装 jq
          sudo apt-get update
          sudo apt-get install -y jq
          
          # 设置下载和解析函数
          download_and_decode() {
            local api_url=$1
            local output_file=$2
            local max_attempts=3
            local attempt=1
            
            while [ $attempt -le $max_attempts ]; do
              echo "Attempt $attempt: Processing $output_file"
              
              # 使用 API 获取文件信息
              response=$(curl -sL -H "Authorization: token $GITEE_TOKEN" "$api_url")
              curl_exit_code=$?
              
              if [ $curl_exit_code -eq 0 ]; then
                # 检查响应是否包含错误信息
                if echo "$response" | jq -e '.message' > /dev/null 2>&1; then
                  error_msg=$(echo "$response" | jq -r '.message')
                  echo "API error: $error_msg"
                else
                  # 解析 JSON 并解码 base64 内容
                  content=$(echo "$response" | jq -r '.content')
                  if [ "$content" != "null" ] && [ -n "$content" ]; then
                    echo "$content" | base64 -d > "$output_file"
                    if [ -s "$output_file" ]; then
                      echo "Successfully downloaded and decoded $output_file"
                      echo "File size: $(wc -c < "$output_file") bytes"
                      return 0
                    else
                      echo "Decoded file is empty"
                      rm -f "$output_file"
                    fi
                  else
                    echo "Failed to extract content from JSON response"
                  fi
                fi
              else
                echo "API request failed with exit code: $curl_exit_code"
              fi
              
              echo "Processing failed, retrying in 5 seconds..."
              sleep 5
              attempt=$((attempt + 1))
            done
            echo "Failed to process $output_file after $max_attempts attempts"
            return 1
          }
          
          # 下载并处理文件
          download_and_decode "https://gitee.com/api/v5/repos/hxfrock/migu_video/contents/migu.json" "migu.json"
          download_and_decode "https://gitee.com/api/v5/repos/hxfrock/migu_video/contents/miguepg.xml" "miguepg.xml"

          # 验证文件是否处理成功
          if [ ! -f "migu.json" ] || [ ! -s "migu.json" ]; then
            echo "Error: migu.json processing failed"
            exit 1
          fi
          
          if [ ! -f "miguepg.xml" ] || [ ! -s "miguepg.xml" ]; then
            echo "Error: miguepg.xml processing failed"
            exit 1
          fi

          echo "Files processed successfully:"
          ls -la migu.json miguepg.xml

      # 检查文件是否有变化
      - name: Check for changes
        id: check_changes
        run: |
          git add migu.json miguepg.xml
          if git diff --staged --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
          fi

      # 提交并 push 到 GitHub（仅当文件有变化时）
      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git commit -m "chore: sync files from Gitee [$(date +'%Y-%m-%d %H:%M')]"
          git push
