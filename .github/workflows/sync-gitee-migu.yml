name: Sync Gitee Migu Files

on:
  schedule:
    - cron: "0 */2 * * *"  # 每 2 小时同步一次
  workflow_dispatch:       # 支持手动触发

jobs:
  sync-files:
    runs-on: ubuntu-latest
    steps:
      # 检出 GitHub 仓库
      - name: Checkout GitHub repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0

      # 配置 Git 用户信息
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 从 Gitee 下载指定文件
      - name: Download files from Gitee
        env:
          GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
        run: |
          # 设置下载重试机制
          download_with_retry() {
            local url=$1
            local output=$2
            local max_attempts=3
            local attempt=1
            
            while [ $attempt -le $max_attempts ]; do
              echo "Attempt $attempt: Downloading $output"
              if curl -sL -H "Authorization: token $GITEE_TOKEN" -o "$output" "$url"; then
                echo "Successfully downloaded $output"
                return 0
              fi
              echo "Download failed, retrying in 5 seconds..."
              sleep 5
              attempt=$((attempt + 1))
            done
            echo "Failed to download $output after $max_attempts attempts"
            return 1
          }
          
          # 下载文件
          download_with_retry "https://gitee.com/api/v5/repos/hxfrock/migu_video/contents/migu.json" "migu.json"
          download_with_retry "https://gitee.com/api/v5/repos/hxfrock/migu_video/contents/miguepg.xml" "miguepg.xml"

      # 检查文件是否有变化
      - name: Check for changes
        id: check_changes
        run: |
          git add migu.json miguepg.xml
          if git diff --staged --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
          fi

      # 提交并 push 到 GitHub（仅当文件有变化时）
      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git commit -m "chore: sync files from Gitee [$(date +'%Y-%m-%d %H:%M')]"
          git push
